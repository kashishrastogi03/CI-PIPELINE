name: Advanced Build, Test & Artifact Pipeline
 
on:
  push: 
    branches:
      - develop
      - master
      - 'feature-*'
  pull_request:
    branches:
      - develop
      - 'feature-*'
  schedule:
    - cron: '30 11 * * 3,5' # Every Wednesday and Friday at 5 PM IST
 
jobs:
  build-and-test:
    runs-on: self-hosted
 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # For SonarQube Analysis

      - name: Cache NuGet Packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
        env:
          DOTNET_INSTALL_DIR: ${{ runner.temp }}/dotnet

      - name: Restore Dependencies
        run: ${{ runner.temp }}/dotnet/dotnet restore

      - name: Build Solution
        run: ${{ runner.temp }}/dotnet/dotnet build --configuration Debug --no-restore

      # SonarQube Start Analysis
      - name: Install SonarQube Scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Start SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"kashishrastogi03_CI-PIPELINE" /o:"kashishrastogi" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Build with SonarQube
        run: ${{ runner.temp }}/dotnet/dotnet build --configuration Debug

      - name: End SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Run Unit Tests
        run: ${{ runner.temp }}/dotnet/dotnet test --configuration Debug --no-build --logger "trx"

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestReports
          path: '**/TestResults/*.trx'
