name: Advanced Build, Test & Artifact Pipeline 

on:
  push: 
    branches:
      - develop
      - 'feature-*'
  pull_request:
    branches:
      - develop
      - 'feature-*'
  schedule:
    - cron: '30 11 * * 3,5' # Every Wednesday and Friday at 5 PM IST

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      # 1. Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v2

      # 2. Cache NuGet Packages
      - name: Cache NuGet Packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}

      # 3. Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
        env:
          DOTNET_INSTALL_DIR: ${{ runner.temp }}/dotnet

      - name: Verify .NET SDK
        run: ${{ runner.temp }}/dotnet/dotnet --list-sdks

      # 4. Restore Dependencies
      - name: Restore Dependencies
        run: ${{ runner.temp }}/dotnet/dotnet restore

      # 5. Build Solution
      - name: Build Solution
        run: ${{ runner.temp }}/dotnet/dotnet build --configuration Debug --no-restore

      # 6. Static Code Analysis
      - name: Static Code Analysis
        run: ${{ runner.temp }}/dotnet/dotnet format --verify-no-changes

      # 7. Run Unit Tests with Code Coverage
      - name: Run Unit Tests with Code Coverage
        run: |
          mkdir -p TestResults
          ${{ runner.temp }}/dotnet/dotnet test --configuration Debug --no-build \
          --logger "trx;LogFileName=TestResults/test_results.trx" \
          --collect:"XPlat Code Coverage"

      # 8. Upload Test Report
      - name: Upload Test Report Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ github.sha }}
          path: '**/TestResults/test_results.trx'

      # ðŸŽ¯ 9. SonarCloud Code Analysis Step
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.cs.opencover.reportsPaths=**/coverage.cobertura.xml

      # 10. Upload Code Coverage Artifact
      - name: Upload Code Coverage Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-${{ github.sha }}
          path: '**/coverage*.xml'

      # 11. Email Notification on Failure
      - name: Send Email Notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.office365.com
          server_port: 587
          username: ${{ secrets.OUTLOOK_EMAIL }}
          password: ${{ secrets.OUTLOOK_PASSWORD }}
          subject: "Build Failed: ${{ github.sha }}"
          to: ${{ secrets.OUTLOOK_EMAIL }}
          from: ${{ secrets.OUTLOOK_EMAIL }}
          body: |
            Build Failed on branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            Please check logs for more details.
          secure: true
