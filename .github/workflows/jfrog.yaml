name: CI Build, Test & Artifact Upload

on:
  push:
    branches: 
      - main 
  pull_request:
    branches:
      - develop
      - 'feature-*'

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
        env:
          DOTNET_INSTALL_DIR: $HOME/.dotnet

      - name: Add .NET to PATH
        run: echo "$HOME/.dotnet:$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --configuration Debug --no-restore

      - name: Copy Build Output for Artifact
        run: |
          mkdir -p artifacts
          cp -r **/bin/Debug/* artifacts/

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: artifacts/

      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin/jfrog

      - name: Authenticate JFrog CLI with Access Token
        run: |
          jfrog config add my-artifactory-24 \
            --artifactory-url https://trial2t885z.jfrog.io/artifactory \
            --access-token "${{ secrets.JGROG_TOKEN }}" \
            --interactive=false

      - name: Verify JFrog Authentication
        run: |
          echo "Checking JFrog CLI configuration..."
          jfrog config show

          echo "Pinging Artifactory..."
          jfrog rt ping

          echo "Listing NuGet packages to confirm access..."
          jfrog rt search "dotnet-nuget-local/*"

      # Add NuGet Source for Artifactory
      - name: Add NuGet Source
        run: |
          nuget sources Add -Name Artifactory \
          -Source "https://trial2t885z.jfrog.io/artifactory/api/nuget/v3/dotnet-nuget-local/index.json" \
          -username "${{ secrets.ARTIFACTORY_USER }}" \
          -password "${{ secrets.JGROG_TOKEN }}"

      - name: Verify NuGet Authentication
        run: |
          echo "Checking configured NuGet sources..."
          nuget sources list

          echo "Checking NuGet API key authentication..."
          nuget getapikey -Source Artifactory

      # Authenticate NuGet with API Key
      - name: Authenticate NuGet with Artifactory
        run: |
          nuget setapikey "${{ secrets.ARTIFACTORY_USER }}:${{ secrets.JGROG_TOKEN }}" -Source Artifactory

      # Push Build Artifacts to Artifactory
      - name: Push Build Artifacts to Artifactory
        run: |
          jfrog rt u "artifacts/*" "dotnet-nuget/${{ github.sha }}/" --flat=false --build-name="dotnet-build" --build-number="${{ github.run_number }}"
          echo "JFrog Upload Exit Code: $?"

      # Push NuGet Package to Artifactory
      - name: Push NuGet Package to Artifactory
        run: |
          dotnet nuget push "artifacts/*.nupkg" \
          --source "Artifactory" \
          --api-key "${{ secrets.JGROG_TOKEN }}"
